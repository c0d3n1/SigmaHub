local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Sigma Hub(Sigma Verison)",
   Icon = 17652614225,
   LoadingTitle = "Sigma Hub(Sigma Verison)",
   LoadingSubtitle = "by puresigma & spy",
   Theme = "Default",
   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false,
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil,
      FileName = "Sigma hub(Sigma Verison)"
   },
   Discord = {
      Enabled = true,
      Invite = "fpXzgaxDQ5",
      RememberJoins = true
   },
   KeySystem = true,
   KeySettings = {
      Title = "Sigma Hub(Sigma Verison)",
      Subtitle = "Key System",
      Note = "Join For Key discord.gg/fpXzgaxDQ5",
      FileName = "Sigma Key",
      SaveKey = true,
      GrabKeyFromSite = false,
      Key = {"eye of rah"}
   }
})

    local function Do1x1x1x1Popups() -- creds to ivan

        while true do

            if Do1x1PopupsLoop then

                local player = game:GetService("Players").LocalPlayer

                local popups = player.PlayerGui.TemporaryUI:GetChildren()

    

                for _, i in ipairs(popups) do

                    if i.Name == "1x1x1x1Popup" then

                        local centerX = i.AbsolutePosition.X + (i.AbsoluteSize.X / 2)

                        local centerY = i.AbsolutePosition.Y + (i.AbsoluteSize.Y / 2)

        

                        VirtualBallsManager:SendMouseButtonEvent(centerX, centerY, Enum.UserInputType.MouseButton1.Value, true, player.PlayerGui, 1)

                        VirtualBallsManager:SendMouseButtonEvent(centerX, centerY, Enum.UserInputType.MouseButton1.Value, false, player.PlayerGui, 1)

                    end

                end

            end

            task.wait(0.1)

        end

    end

local player = game:GetService("Players").LocalPlayer
local playergui = player:WaitForChild("PlayerGui")

local function togglehidebar(state)
    hideplayerbar = state 
    
    -- Wait for the UI elements to exist
    local temporaryUI = playergui:WaitForChild("TemporaryUI")
    local playerinfo = temporaryUI:WaitForChild("PlayerInfo")
    
    if hideplayerbar then
        playerinfo.CurrentSurvivors.Visible = false
        playerinfo.PlayerIcon.Image = "rbxassetid://12549056837"
    else
        playerinfo.CurrentSurvivors.Visible = true
    end
end


    local function speedmulti(value)

        game.Players.LocalPlayer.Character.SpeedMultipliers.Sprinting.Value = value

    end

    local function staminadrainono(state)

        stam = state

        local stamscript = require(game.ReplicatedStorage.Systems.Character.Game.Sprinting)

        

        local connection

        connection = game:GetService("RunService").Heartbeat:Connect(function()

            if not stam then

                connection:Disconnect()

                stamscript.StaminaLossDisabled = nil

                return

            end

            stamscript.StaminaLossDisabled = function() 

            end

        end)

    end 

-- Shared variables at the top of your script
local run = false
local currentDelay = 2.5  -- This will be shared between both functions

-- Function to update the delay (called by slider)
local function setdelay(value)
    currentDelay = value
end

-- Modified autogen function
local function autogen(state)
    run = state
    local debounce = {}
    
    while run do
        task.wait()
        for _, v in pairs(game.Workspace.Map.Ingame.Map:GetChildren()) do
            if v.Name == "Generator" then
                if not debounce[v] then
                    debounce[v] = true
                    v:WaitForChild("Remotes"):WaitForChild("RE"):FireServer()
                    task.delay(currentDelay, function()  -- Use the shared currentDelay
                        debounce[v] = nil
                    end)
                end
            end
        end
    end
end


local function killerHighlighter(state)
    isKillerHighlightActive = state
    local function applyKillerHighlight(model)
        if model:IsA("Model") and model:FindFirstChild("Head") then
            local existingBillboard = model.Head:FindFirstChild("billboard")
            local existingHighlight = model:FindFirstChild("HiThere")
            local existingBox = model:FindFirstChild("ESPBox")
            local existingHealthBar = model.PrimaryPart and model.PrimaryPart:FindFirstChild("HealthBar") or nil
            
            if isKillerHighlightActive then
                
                if not existingBillboard then
                    local billboard = Instance.new("BillboardGui")
                    billboard.Name = "billboard"
                    billboard.Size = UDim2.new(0, 100, 0, 50)
                    billboard.StudsOffset = Vector3.new(0, 2, 0)
                    billboard.AlwaysOnTop = true
                    billboard.Parent = model.Head
                    local textLabel = Instance.new("TextLabel", billboard)
                    textLabel.Size = UDim2.new(1, 0, 1, 0)
                    textLabel.Text = model.Name
                    textLabel.TextColor3 = Color3.new(1, 1, 1)
                    textLabel.TextStrokeTransparency = 0
                    textLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
                    textLabel.BackgroundTransparency = 1
                end
                
                
                if not existingHighlight then
                    local highlight = Instance.new("Highlight")
                    highlight.Name = "HiThere"
                    highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                    highlight.FillColor = Color3.fromRGB(255, 0, 0)
                    highlight.Parent = model
                end
                
                if model.PrimaryPart then

                    if not existingBox then
                        local box = Instance.new("BoxHandleAdornment")
                        box.Name = "ESPBox"
                        box.Size = model:GetExtentsSize()
                        box.Color3 = Color3.new(1, 0, 0) 
                        box.Transparency = 0.5
                        box.AlwaysOnTop = true
                        box.ZIndex = 1
                        box.Adornee = model.PrimaryPart
                        box.Parent = model
                    end
                    
                    if not existingHealthBar then
                        local healthBar = Instance.new("BillboardGui")
                        healthBar.Name = "HealthBar"
                        healthBar.Size = UDim2.new(0.8, 0, 2.5, 0) 
                        healthBar.StudsOffset = Vector3.new(model:GetExtentsSize().X/2 + 0.8, 0, 0)
                        healthBar.AlwaysOnTop = true
                        healthBar.Parent = model.PrimaryPart
                        
                        local background = Instance.new("Frame", healthBar)
                        background.Name = "Background"
                        background.Size = UDim2.new(0.3, 0, 1, 0)
                        background.Position = UDim2.new(0.35, 0, 0, 0)
                        background.BackgroundColor3 = Color3.new(0, 1, 0)
                        background.BorderSizePixel = 1
                        background.BorderColor3 = Color3.new(0, 0, 0)
                        
                        local bar = Instance.new("Frame", background)
                        bar.Name = "Bar"
                        bar.Size = UDim2.new(1, 0, 1, 0)
                        bar.AnchorPoint = Vector2.new(0, 1)
                        bar.Position = UDim2.new(0, 0, 1, 0)
                        bar.BackgroundColor3 = Color3.new(1, 0, 0) 
                        bar.BorderSizePixel = 0
                        bar.ZIndex = 2
                        
                        
                        local percentageText = Instance.new("TextLabel", healthBar)
                        percentageText.Name = "PercentageText"
                        percentageText.Size = UDim2.new(1, 0, 0.2, 0)
                        percentageText.Position = UDim2.new(0, 0, -0.2, 0)
                        percentageText.Text = "100%"
                        percentageText.TextColor3 = Color3.new(1, 1, 1)
                        percentageText.TextStrokeTransparency = 0
                        percentageText.TextStrokeColor3 = Color3.new(0, 0, 0)
                        percentageText.BackgroundTransparency = 1
                        percentageText.Font = Enum.Font.SourceSansBold
                        percentageText.TextSize = 14
                        percentageText.ZIndex = 3
                        
                       
                        local function updateHealth()
                            local humanoid = model:FindFirstChildOfClass("Humanoid")
                            if humanoid then
                                local healthPercent = humanoid.Health / humanoid.MaxHealth
                                local percentage = math.floor(healthPercent * 100)
                                
                               
                                bar.Size = UDim2.new(1, 0, healthPercent, 0)
                                local g = math.clamp(2 * healthPercent, 0, 1)
                                bar.BackgroundColor3 = Color3.new(0, 1, 0)
                                
                              
                                percentageText.Text = percentage .. "%"
                                percentageText.TextColor3 = healthPercent > 0.5 
                                    and Color3.new(1, 1, 1)  
                                    or Color3.new(1, 0.7, 0.7)
                            end
                        end
                        
                        if model:FindFirstChildOfClass("Humanoid") then
                            updateHealth()
                            model:FindFirstChildOfClass("Humanoid"):GetPropertyChangedSignal("Health"):Connect(updateHealth)
                        end
                    end
                end
            else
               
                if existingBillboard then existingBillboard:Destroy() end
                if existingHighlight then existingHighlight:Destroy() end
                if existingBox then existingBox:Destroy() end
                if existingHealthBar then existingHealthBar:Destroy() end
            end
        end
    end
    
   
    for _, v in pairs(game.Workspace.Players.Killers:GetChildren()) do
        applyKillerHighlight(v)
    end
    
 
    game.Workspace.Players.Killers.ChildAdded:Connect(function(child)
        applyKillerHighlight(child)
    end)
end

local function survivorHighlighter(state)
    isSurvivorHighlightActive = state
    local function applySurvivorHighlight(model)
        if model:IsA("Model") and model:FindFirstChild("Head") then
            local existingBillboard = model.Head:FindFirstChild("billboard")
            local existingHighlight = model:FindFirstChild("HiThere")
            local existingBox = model:FindFirstChild("ESPBox")
            local existingHealthBar = model.PrimaryPart and model.PrimaryPart:FindFirstChild("HealthBar") or nil
            
            if isSurvivorHighlightActive then
             
                if not existingBillboard then
                    local billboard = Instance.new("BillboardGui")
                    billboard.Name = "billboard"
                    billboard.Size = UDim2.new(0, 100, 0, 50)
                    billboard.StudsOffset = Vector3.new(0, 2, 0)
                    billboard.AlwaysOnTop = true
                    billboard.Parent = model.Head
                    local textLabel = Instance.new("TextLabel", billboard)
                    textLabel.Size = UDim2.new(1, 0, 1, 0)
                    textLabel.Text = model.Name
                    textLabel.TextColor3 = Color3.new(1, 1, 1)
                    textLabel.TextStrokeTransparency = 0
                    textLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
                    textLabel.BackgroundTransparency = 1
                end
                
                
                if not existingHighlight then
                    local highlight = Instance.new("Highlight")
                    highlight.Name = "HiThere"
                    highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                    highlight.FillColor = Color3.fromRGB(0, 0, 252)
                    highlight.Parent = model
                end
                
              
                if model.PrimaryPart then
                 
                    if not existingBox then
                        local box = Instance.new("BoxHandleAdornment")
                        box.Name = "ESPBox"
                        box.Size = model:GetExtentsSize()
                        box.Color3 = Color3.new(0, 0, 1) 
                        box.Transparency = 0.5
                        box.AlwaysOnTop = true
                        box.ZIndex = 1
                        box.Adornee = model.PrimaryPart
                        box.Parent = model
                    end
                    
                    
                    if not existingHealthBar then
                        local healthBar = Instance.new("BillboardGui")
                        healthBar.Name = "HealthBar"
                        healthBar.Size = UDim2.new(0.5, 0, 2, 0)
                        healthBar.StudsOffset = Vector3.new(model:GetExtentsSize().X/2 + 0.5, 0, 0)
                        healthBar.AlwaysOnTop = true
                        healthBar.Parent = model.PrimaryPart
                        
                        local background = Instance.new("Frame", healthBar)
                        background.Name = "Background"
                        background.Size = UDim2.new(0.3, 0, 1, 0)
                        background.Position = UDim2.new(0.35, 0, 0, 0)
                        background.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
                        background.BorderSizePixel = 1
                        background.BorderColor3 = Color3.new(0, 0, 0)
                        
                        local bar = Instance.new("Frame", background)
                        bar.Name = "Bar"
                        bar.Size = UDim2.new(1, 0, 1, 0)
                        bar.AnchorPoint = Vector2.new(0, 1)
                        bar.Position = UDim2.new(0, 0, 1, 0)
                        bar.BackgroundColor3 = Color3.new(0, 1, 0)
                        bar.BorderSizePixel = 0
                        bar.ZIndex = 2
                        
                       
                        local function updateHealth()
                            local humanoid = model:FindFirstChildOfClass("Humanoid")
                            if humanoid then
                                local healthPercent = humanoid.Health / humanoid.MaxHealth
                                bar.Size = UDim2.new(1, 0, healthPercent, 0)
                                
                                
                                local r = math.clamp(2 * (1 - healthPercent), 0, 1)
                                local g = math.clamp(2 * healthPercent, 0, 1)
                                bar.BackgroundColor3 = Color3.new(r, g, 0)
                            end
                        end
                        
                        if model:FindFirstChildOfClass("Humanoid") then
                            updateHealth()
                            model:FindFirstChildOfClass("Humanoid"):GetPropertyChangedSignal("Health"):Connect(updateHealth)
                        end
                    end
                end
            else
                
                if existingBillboard then existingBillboard:Destroy() end
                if existingHighlight then existingHighlight:Destroy() end
                if existingBox then existingBox:Destroy() end
                if existingHealthBar then existingHealthBar:Destroy() end
            end
        end
    end
    
    
    for _, v in pairs(game.Workspace.Players.Survivors:GetChildren()) do
        applySurvivorHighlight(v)
    end
    
    
    game.Workspace.Players.Survivors.ChildAdded:Connect(function(child)
        applySurvivorHighlight(child)
    end)
end

local function toggleHighlightGen(state)
    isHighlightActive = state 
    local function applyGeneratorHighlight(generator)
        if generator.Name == "Generator" then
            local existingHighlight = generator:FindFirstChild("GeneratorHighlight")
            local progress = generator:FindFirstChild("Progress")
            if isHighlightActive then
                if not existingHighlight then
                    local genhighlight = Instance.new("Highlight")
                    genhighlight.Parent = generator
                    genhighlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                    genhighlight.Name = "GeneratorHighlight"
                end
            else
                if existingHighlight then existingHighlight:Destroy() end
                return
            end
            if progress then
                if progress.Value == 100 then
                    local highlight = generator:FindFirstChild("GeneratorHighlight")
                    if highlight then highlight:Destroy() end
                    return
                end
                progress:GetPropertyChangedSignal("Value"):Connect(function()
                    if progress.Value == 100 then
                        local highlight = generator:FindFirstChild("GeneratorHighlight")
                        if highlight then highlight:Destroy() end
                    elseif isHighlightActive and not generator:FindFirstChild("GeneratorHighlight") then
                        local genhighlight = Instance.new("Highlight")
                        genhighlight.Parent = generator
                        genhighlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                        genhighlight.Name = "GeneratorHighlight"
                    end
                end)
            end
        end
    end
    for _, v in pairs(game.Workspace.Map.Ingame.Map:GetChildren()) do
        applyGeneratorHighlight(v)
    end
    game.Workspace.Map.Ingame.Map.ChildAdded:Connect(function(child)
        applyGeneratorHighlight(child)
    end)
end

local function highlighttools(state)
    toolhighlightActive = state
    local function applyHighlight(tool)
        if toolhighlightActive then
            local existinghighlight = tool:FindFirstChild("ToolHighlight")
            if not existinghighlight then
                local toolhighlight = Instance.new("Highlight")
                toolhighlight.Name = "ToolHighlight"
                toolhighlight.Parent = tool
                toolhighlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                if tool.Name == "Medkit" then
                    toolhighlight.FillColor = Color3.fromRGB(0, 255, 0)
                elseif tool.Name == "BloxyCola" then
                    toolhighlight.FillColor = Color3.fromRGB(88, 57, 39)
                end
            end
        else
            local existinghighlight = tool:FindFirstChild("ToolHighlight")
            if existinghighlight then existinghighlight:Destroy() end
        end
    end
    for _, v in pairs(game.Workspace.Map.Ingame:GetChildren()) do
        if v:IsA("Tool") then applyHighlight(v) end
    end
    game.Workspace.Map.Ingame.ChildAdded:Connect(function(child)
        if child:IsA("Tool") then applyHighlight(child) end
    end)
end

local function instantsolvegen()
   for i, v in pairs(game.Workspace.Map.Ingame.Map:GetChildren()) do
      if v.name == "Generator" then
         local num = 0
         repeat
            num += 1
            v:WaitForChild("Remotes"):WaitForChild("RE"):FireServer()
         until num == 4
      end
   end
end

local function solvegen()
   for i, v in pairs(game.Workspace.Map.Ingame.Map:GetChildren()) do
      if v.name == "Generator" then
         v:WaitForChild("Remotes"):WaitForChild("RE"):FireServer()
      end
   end
end

local function instantsolvegenhell()
   for i, v in pairs(game.Workspace.Map.Ingame.Map.Generators:GetChildren()) do
      if v:IsA("Model") then
         local num = 0
         repeat
            num += 1
            v:WaitForChild("Remotes"):WaitForChild("RE"):FireServer()
         until num == 4
      end
   end
end

local Tabinfo = Window: CreateTab("Info", "info")
local Tab = Window:CreateTab("Generators", "git-compare")
local TabVis = Window:CreateTab("Visuals", "eye")
local TabMisc = Window:CreateTab("Miscellaneous", "smile")
local TabBla = Window:CreateTab("Blatant", "frown")
local TabSett = Window:CreateTab("Settings", "settings")
local TabCre = Window:CreateTab("Credits", "handshake")

local Section = Tabinfo:CreateSection("Information & how to use sigma hub")
local Section = Tab:CreateSection("Generators")
local Section = TabVis:CreateSection("Highlighters")
local Section = TabSett:CreateSection("Close Sigma Hub")
local Section = TabCre:CreateSection("Credits")
local Label = TabCre:CreateLabel("Credits to PureSigma and Spy")
local Section = TabBla:CreateSection("Movement")

local Label = Tabinfo:CreateLabel("If generator says callback dont worry you just have to be in the round for it to work")
local Label = Tabinfo:CreateLabel("DO NOT use martial artist with other animations because it will always stay even if you're dead/killed")
local Label = Tabinfo:CreateLabel("unload your sigmahub first before executing it again located in the Settings Tab")
local Label = Tabinfo:CreateLabel("Thankies for using SigmaHub - puresigma")

TabSett:CreateButton({
   Name = "Unload Sigma Hub",
   Callback = function()
      Rayfield:Destroy()
   end,
})

TabSett:CreateSection("Themes")

local Section = TabMisc:CreateSection("Scripts")

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local camera = workspace.CurrentCamera

local teleportDistance = 10

Rayfield:Notify({
   Title = "Sigma Hub",
   Content = "Sigma Hub is loaded",
   Duration = 6.5,
   Image = 4483362458,
})

Rayfield:Notify({
   Title = "Sigma Hub",
   Content = "Enjoy Mogging the Forsakeners",
   Duration = 6.5,
   Image = 4483362458,
})

TabSett:CreateDropdown({
   Name = "Current Theme",
   Options = {"Default", "AmberGlow", "Amethyst", "Bloom", "DarkBlue", "Green", "Light", "Ocean", "Serenity"},
   CurrentOption = {"Default"},
   MultipleOptions = false,
   Flag = "CurrentTheme",
   Callback = function(Options)
        Window.ModifyTheme(Options[1])
   end,
})

local Keybind = TabBla:CreateKeybind({
   Name = "Teleport Keybind",
   CurrentKeybind = "T",
   HoldToInteract = false,
   Flag = "Keybind1",
   Callback = function()
       local character = player.Character or player.CharacterAdded:Wait()
       local rootPart = character:FindFirstChild("HumanoidRootPart")
       if rootPart and camera then
           local direction = camera.CFrame.LookVector
           local moveDirection
           if direction.Y > 0.1 then
               moveDirection = direction.Unit
           else
               moveDirection = Vector3.new(direction.X, 0, direction.Z).Unit
           end
           local newPosition = rootPart.Position + (moveDirection * teleportDistance)
           rootPart.CFrame = CFrame.new(newPosition, newPosition + moveDirection)
       end
   end,
})

TabBla:CreateSlider({
   Name = "Teleport Distance",
   Range = {1, 100},
   Increment = 1,
   Suffix = "Studs",
   CurrentValue = 10,
   Flag = "Slider1",
   Callback = function(Value)
      teleportDistance = Value
   end,
})

    local WalkspeedSlider = TabBla:CreateSlider({

        Name = "WalkSpeed",

        Range = {1, 1000},

        Increment = 1,

        Suffix = ";",

        CurrentValue = 1,

        Callback = function(value)

        speedmulti(value)

        end,

     })

TabMisc:CreateButton({
   Name = "Load IY",
   Callback = function()
      loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
   end,
})

TabMisc:CreateSection("Animation Scripts")

TabMisc:CreateButton({
   Name = "Guest Punch Replace",
   Callback = function()
      loadstring(game:HttpGet("https://raw.githubusercontent.com/c0d3n1/martialartistguest/refs/heads/main/kaiguest"))()
   end,
})

TabMisc:CreateButton({
   Name = "Martial Artist B",
   Callback = function()
      loadstring(game:HttpGet("https://raw.githubusercontent.com/c0d3n1/Martial-Artist-B/refs/heads/main/MartialB"))()
   end,
})

TabMisc:CreateButton({
   Name = "Martial Artist V",
   Callback = function()
      loadstring(game:HttpGet("https://raw.githubusercontent.com/c0d3n1/Martial-Artist-V/refs/heads/main/MartialV"))()
   end,
})

TabMisc:CreateButton({
   Name = "TwoTimes (ReWork)",
   Callback = function()
      print("Attempting to load TwoTimes (ReWork)...")
      local success, message = pcall(function()
         loadstring(game:HttpGet("https://raw.githubusercontent.com/c0d3n1/two-time-rework/refs/heads/main/twotime"))()
      end)
      if success then
         print("TwoTimes (ReWork) loaded successfully!")
      else
         warn("Error loading TwoTimes (ReWork): " .. message)
      end
   end,
})

Tab:CreateButton({
   Name = "Instant Solve All(Risk Kick)",
   Callback = function()
      instantsolvegen()
   end,
})

Tab:CreateButton({
   Name = "Solve One Puzzle",
   Callback = function()
      solvegen()
   end,
})

local Toggle3 = TabVis:CreateToggle({
    Name = "Tool Highlighter",
    CurrentValue = false,
    Callback = function(state)
    highlighttools(state)
    end,
})

local Toggle2 = TabVis:CreateToggle({
    Name = "Generator Highlighter",
    CurrentValue = false,
    Callback = function(state)
    toggleHighlightGen(state)
    end,
})

local Toggle4 = TabVis:CreateToggle({
    Name = "Survivor Highligter",
    CurrentValue = false,
    Callback = function(state)
    survivorHighlighter(state)
    end,
})

local Toggle5 = TabVis:CreateToggle({
    Name = "Killer Highligter",
    CurrentValue = false,
    Callback = function(state)
    killerHighlighter(state)
    end,
})

Tab:CreateDivider()

local Keybind = Tab:CreateKeybind({
    Name = "Do Current Generator Puzzle",
    CurrentKeybind = "H",
    HoldToInteract = false,
    Callback = function(Keybind)
    solvegen()
    end,
})

     Tab:CreateDivider() 

    

     local Toggle1 = Tab:CreateToggle({

        Name = "Auto Generator",

        CurrentValue = false,

      

        Callback = function(state)

        autogen(state)

        end,

     })

     local Slider1 = Tab:CreateSlider({

        Name = "Auto Gen Delay",

        Range = {2.5, 10},

        Increment = 2.5,

        Suffix = "seconds",

        CurrentValue = 2.5,

         

        Callback = function(value)

        setdelay(value)

        end,

     })


local Section = TabBla:CreateSection("Stamina")

    local nostaminaloss = TabBla:CreateToggle({ 

        Name = "Infinite Stamina",

        CurrentValue = false,

        Callback = function(state)

            staminadrainono(state)

        end,

    })

TabMisc:CreateSection("Useful things")


    local popupsolver = TabMisc:CreateToggle({

        Name = "1x1x1x1 popup closer",

        CurrentValue = false,

        Callback = function(state)

            Do1x1PopupsLoop = state and task.spawn(Do1x1x1x1Popups)

        end,

})

local Toggle12 = TabMisc:CreateToggle({
    Name = "Hide Player Bar",
    CurrentValue = false,
    Callback = function(state)
        togglehidebar(state)
    end,
})

Rayfield:LoadConfiguration()
